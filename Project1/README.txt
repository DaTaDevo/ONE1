----------------Об Обновлении                                                         		
Последнее обновление пренесло в себе то, что теперь есть только одинн файл DataStorage.		
Так было сделано для удобства пользователей, потому что создание отдельного файла для отдельных	
контактов принисло бы плохие плоды , как минимум можно таким образом потерять данные в куче 	
остальных фалов.
Так же программа перешла на шаблон MVC.

----------------Документация
----Файлы
main.cpp - главный фал программы
model.h  - файл для храние типов данных относящиеся только к данной программе
view.h   - файл для отображение и зопалнение данных
controller.h - файл для обработки данных и полученных запросов от пользователя(view.h)
---Функции
Model.h:
 
Model() - стандартный конструктор
Model operator = (Model*m) - оператор рано для переменных типа Model
Model(std::string s_name,std::strings_num) - другой конструктор
void set(std::string s_name,std::string s_num) - фунция сеттер для данных имени и номера
void setName(std::string s_name) - функция сеттер только для имени
void Number(std::string s_num) -функция сеттер только для номера
std::string getName() - функция геттер только для имени
std::string getNum() - функция геттер только для номера

View.h:

void print(std::string text) - функция для ввывода текста(без std::endl)
bool checkInputNumber(std::string number) - функция для проверки написание номера, возвращает 
						true если номер равен 12 символам 
						false если меньше или больше 12 и так же пишет
						сообщение об наличие ошибки(см.checkInputNumber)
void m_start() - функция котороя выводит меню (m_ - означает что эта функция являеться частью 
						меню) что бы узанть выбор , она указывает
						значение для переменной answr
						(см.README.txt->Переменные)
int m_addContact(Model &contact) - функция-меню позволяющая добавить контакт. 
					возвращает 0 - если никаких проблем не возникло
					1 - если что то произошло не так(так же выводит
									ошибку)
std::string m_findContact() - функция-меню котороя ищет контакт. Возращате имя которое ввел
				пользователь для функции 
				Controller::find(см. README->Функции->Controller.h)
void showContact(Model& mdl) - показывает контакт(Model)
void m_deleteContact(Model* deletedContact) - функция-меню для удаление контакта. 
						Принимает Model-переменную в которую 
						вноситься данные об контакте который будет 
						удален в одноименной функции
						Controller::deleteContact()
						(см. READMЕ->Функции->Controller.h)

Controller.h:

void start() - фунция запускающая View::m_start(см. Функции->View.h) и обрабатывает 
			переменную View:ansr(см. Переменные-> View.h)
void saveContact() - сохраняет контакт в файл DataStorage.txt
void find() - обрабатывает данные полученные функцией m_findContact(см. Функции->View.h) 
					и выводит найденные данные(может вывести несколько)
						(контактов)
bool checkInput(char inputed, std::string array) - функция проверяющая введенные данные
							(inputed) и проверяет их на 
							ожидаеммые(правильные)
							(array)
void deleteContact() -  удаляет контак. Переписывает DataStorage для обнавленных данных 
					без удаленного контакта(контактов).

---Переменные
Model.h:

std::string name - имя 
std::stirng num - номер

View.h:

int answr - переменная для получение ответа в целочисленной типе 
char c_answr - пиременная для получение ответа в символьной типе 

Controller.h:

View v - переменная-класса View  
Model m - переменная -класса Mof
enum menu - перечесление, содержит в себе значение меню (Пример: showContact и т.д.)

Итог:
Это вся документация о программе PhoneBook (build 2.0)
Если нужны отдельные подробности пишите на 
Telegram	: [Вставить ссылку]
Gmail 		: denixden2818@gmail.com 